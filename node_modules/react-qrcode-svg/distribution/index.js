"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _qrImage = _interopRequireDefault(require("qr-image"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var QrCodeSvg = function QrCodeSvg(data, ecLevel) {
  var code = _qrImage.default.svgObject(data, {
    ec_level: ecLevel,
    type: 'svg',
    parse_url: true,
    size: 1,
    margin: 0
  });

  return code;
};

var QrCode = function QrCode(_ref) {
  var _ref$data = _ref.data,
      data = _ref$data === void 0 ? '' : _ref$data,
      _ref$ecLevel = _ref.ecLevel,
      ecLevel = _ref$ecLevel === void 0 ? 'L' : _ref$ecLevel,
      _ref$bgColor = _ref.bgColor,
      bgColor = _ref$bgColor === void 0 ? 'none' : _ref$bgColor,
      _ref$fgColor = _ref.fgColor,
      fgColor = _ref$fgColor === void 0 ? '#000' : _ref$fgColor,
      _ref$margin = _ref.margin,
      margin = _ref$margin === void 0 ? 4 : _ref$margin,
      children = _ref.children,
      _ref$version = _ref.version,
      version = _ref$version === void 0 ? '1.1' : _ref$version,
      _ref$baseProfile = _ref.baseProfile,
      baseProfile = _ref$baseProfile === void 0 ? 'full' : _ref$baseProfile,
      _ref$xmlns = _ref.xmlns,
      xmlns = _ref$xmlns === void 0 ? 'http://www.w3.org/2000/svg' : _ref$xmlns,
      props = _objectWithoutProperties(_ref, ["data", "ecLevel", "bgColor", "fgColor", "margin", "children", "version", "baseProfile", "xmlns"]);

  var size = _qrImage.default.matrix(data, ecLevel).length;

  var boxOffset = -margin;
  var boxSize = size + 2 * margin;
  var viewBox = "".concat(boxOffset, " ").concat(boxOffset, " ").concat(boxSize, " ").concat(boxSize);
  props = _objectSpread({
    version: version,
    baseProfile: baseProfile,
    xmlns: xmlns
  }, props);
  return _react.default.createElement("svg", _extends({}, props, {
    viewBox: viewBox
  }), children, _react.default.createElement("rect", {
    x: boxOffset,
    y: boxOffset,
    width: boxSize,
    height: boxSize,
    fill: bgColor
  }), _react.default.createElement("path", {
    d: QrCodeSvg(data, ecLevel).path,
    fill: fgColor
  }));
};

var _default = QrCode;
exports.default = _default;
//# sourceMappingURL=index.js.map